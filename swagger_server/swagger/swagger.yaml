---
swagger: "2.0"
info:
  description: "Здесь вы можете найти API для работы с проектом для помощи волонте\
    рам с обменом опыта"
  version: "1.0.0"
  title: "Digital ENV волонтерство"
  contact:
    email: "sorokin.a.n.post@gmail.com"
host: "localhost:8080"
basePath: "/v2"
tags:
- name: "Article"
  description: "Работа со статьями"
- name: "Event"
  description: "Работа с мероприятиями"
- name: "User"
  description: "Работа с пользователемя"
schemes:
- "https"
- "http"
paths:
  /article:
    post:
      tags:
      - "Article"
      summary: "Создать новую статью"
      description: ""
      operationId: "add_article"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Нужно отправить текст статьи и логин пользователя который её\
          \ написал"
        required: true
        schema:
          $ref: "#/definitions/body"
      responses:
        200:
          description: "Статья успешно создана"
        405:
          description: "Неправильный ввода"
        500:
          description: "Ошибка на сервере"
      x-swagger-router-controller: "swagger_server.controllers.article_controller"
  /article/{id}:
    get:
      tags:
      - "Article"
      summary: "Получить статью"
      description: "По id статьи можно получить более подробную информацию о ней"
      operationId: "get_article"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Уникальный id статьи"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Операция прошла успешно"
          schema:
            $ref: "#/definitions/Article"
        400:
          description: "Неправильный id"
        404:
          description: "Id не найден"
      x-swagger-router-controller: "swagger_server.controllers.article_controller"
  /event:
    put:
      tags:
      - "Event"
      summary: "Добавить заявку на участие в мероприятие"
      description: ""
      operationId: "add_party"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Подать заявку на участие в мероприятиях от добровольцев Росс\
          ии"
        required: true
        schema:
          $ref: "#/definitions/body_1"
      responses:
        200:
          description: "Заявка успешно создана"
        405:
          description: "Неправильный ввод"
        500:
          description: "Ошибка на сервере"
      x-swagger-router-controller: "swagger_server.controllers.event_controller"
  /user/{login}:
    get:
      tags:
      - "User"
      summary: "Получить данные о пользователе"
      description: "По логину можно получить более подробную информацию о нем"
      operationId: "get_user"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "login"
        in: "path"
        description: "Уникальный логин пользователя"
        required: true
        type: "string"
      responses:
        200:
          description: "Операция прошла успешно"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Неправильный логин"
        404:
          description: "Логин не найден"
      x-swagger-router-controller: "swagger_server.controllers.user_controller"
definitions:
  Article:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      text:
        type: "string"
      author:
        type: "string"
        description: "login author"
      rate:
        type: "string"
      numberViews:
        type: "string"
      date:
        type: "string"
        format: "date-time"
      achievements:
        type: "array"
        items:
          $ref: "#/definitions/Achievement"
    example:
      date: "2000-01-23T04:56:07.000+00:00"
      numberViews: "numberViews"
      achievements:
      - goal: 1
        name: "name"
        id: 6
        describe: "describe"
      - goal: 1
        name: "name"
        id: 6
        describe: "describe"
      rate: "rate"
      author: "author"
      id: 0
      text: "text"
  User:
    type: "object"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      login:
        type: "string"
      password:
        type: "string"
      location:
        type: "string"
      achievements:
        type: "array"
        items:
          $ref: "#/definitions/Achievement"
    example:
      firstName: "firstName"
      lastName: "lastName"
      password: "password"
      achievements:
      - goal: 1
        name: "name"
        id: 6
        describe: "describe"
      - goal: 1
        name: "name"
        id: 6
        describe: "describe"
      location: "location"
      login: "login"
      email: "email"
  Achievement:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      describe:
        type: "string"
      goal:
        type: "integer"
        format: "int32"
    example:
      goal: 1
      name: "name"
      id: 6
      describe: "describe"
  body:
    type: "object"
    properties:
      text:
        type: "string"
      author:
        type: "string"
        description: "логин пользователя"
  body_1:
    type: "object"
    properties:
      login:
        type: "string"
        description: "Логин пользователя"
      idEvent:
        type: "integer"
        format: "int64"
