# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.achievement import Achievement  # noqa: F401,E501
from swagger_server import util


class User(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, first_name: str=None, last_name: str=None, email: str=None, login: str=None, password: str=None, location: str=None, achievements: List[Achievement]=None):  # noqa: E501
        """User - a model defined in Swagger

        :param first_name: The first_name of this User.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this User.  # noqa: E501
        :type last_name: str
        :param email: The email of this User.  # noqa: E501
        :type email: str
        :param login: The login of this User.  # noqa: E501
        :type login: str
        :param password: The password of this User.  # noqa: E501
        :type password: str
        :param location: The location of this User.  # noqa: E501
        :type location: str
        :param achievements: The achievements of this User.  # noqa: E501
        :type achievements: List[Achievement]
        """
        self.swagger_types = {
            'first_name': str,
            'last_name': str,
            'email': str,
            'login': str,
            'password': str,
            'location': str,
            'achievements': List[Achievement]
        }

        self.attribute_map = {
            'first_name': 'firstName',
            'last_name': 'lastName',
            'email': 'email',
            'login': 'login',
            'password': 'password',
            'location': 'location',
            'achievements': 'achievements'
        }

        self._first_name = first_name
        self._last_name = last_name
        self._email = email
        self._login = login
        self._password = password
        self._location = location
        self._achievements = achievements

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_name(self) -> str:
        """Gets the first_name of this User.


        :return: The first_name of this User.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name: str):
        """Sets the first_name of this User.


        :param first_name: The first_name of this User.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self) -> str:
        """Gets the last_name of this User.


        :return: The last_name of this User.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name: str):
        """Sets the last_name of this User.


        :param last_name: The last_name of this User.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def email(self) -> str:
        """Gets the email of this User.


        :return: The email of this User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this User.


        :param email: The email of this User.
        :type email: str
        """

        self._email = email

    @property
    def login(self) -> str:
        """Gets the login of this User.


        :return: The login of this User.
        :rtype: str
        """
        return self._login

    @login.setter
    def login(self, login: str):
        """Sets the login of this User.


        :param login: The login of this User.
        :type login: str
        """

        self._login = login

    @property
    def password(self) -> str:
        """Gets the password of this User.


        :return: The password of this User.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this User.


        :param password: The password of this User.
        :type password: str
        """

        self._password = password

    @property
    def location(self) -> str:
        """Gets the location of this User.


        :return: The location of this User.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location: str):
        """Sets the location of this User.


        :param location: The location of this User.
        :type location: str
        """

        self._location = location

    @property
    def achievements(self) -> List[Achievement]:
        """Gets the achievements of this User.


        :return: The achievements of this User.
        :rtype: List[Achievement]
        """
        return self._achievements

    @achievements.setter
    def achievements(self, achievements: List[Achievement]):
        """Sets the achievements of this User.


        :param achievements: The achievements of this User.
        :type achievements: List[Achievement]
        """

        self._achievements = achievements
